[0.025s] Invoking command in '/home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices': AMENT_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:/opt/ros/humble LD_LIBRARY_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices -- -j12 -l12
[0.049s] -- Found ament_cmake: 1.3.5 (/opt/ros/humble/share/ament_cmake/cmake)
[0.180s] -- Found rclcpp: 16.0.5 (/opt/ros/humble/share/rclcpp/cmake)
[0.206s] -- Found rosidl_generator_c: 3.1.5 (/opt/ros/humble/share/rosidl_generator_c/cmake)
[0.208s] -- Found rosidl_adapter: 3.1.5 (/opt/ros/humble/share/rosidl_adapter/cmake)
[0.213s] -- Found rosidl_generator_cpp: 3.1.5 (/opt/ros/humble/share/rosidl_generator_cpp/cmake)
[0.222s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[0.236s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[0.287s] -- Found rmw_implementation_cmake: 6.1.1 (/opt/ros/humble/share/rmw_implementation_cmake/cmake)
[0.289s] -- Found rmw_fastrtps_cpp: 6.2.3 (/opt/ros/humble/share/rmw_fastrtps_cpp/cmake)
[0.402s] -- Using RMW implementation 'rmw_fastrtps_cpp' as default
[0.567s] -- Found angles: 1.15.0 (/opt/ros/humble/share/angles/cmake)
[0.568s] -- Found geometry_msgs: 5.2.0 (/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/share/geometry_msgs/cmake)
[0.607s] -- Found loki_msgs: 2.0.0 (/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/share/loki_msgs/cmake)
[0.870s] -- Configuring done
[0.886s] -- Generating done
[0.888s] -- Build files have been written to: /home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices
[0.911s] [35m[1mConsolidate compiler generated dependencies of target pytocpp[0m
[0.915s] [35m[1mConsolidate compiler generated dependencies of target can[0m
[0.922s] [  9%] [32mBuilding CXX object CMakeFiles/pytocpp.dir/src/py_to_cpp.cpp.o[0m
[0.967s] [ 90%] Built target can
[5.522s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36[m[K,
[5.522s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.523s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[5.523s] /opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = loki_msgs::srv::SimDrive][m[Kâ€™:
[5.523s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = loki_msgs::srv::SimDrive; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.523s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = loki_msgs::srv::SimDrive; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.523s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:67:62:[m[K   required from here
[5.523s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kstd::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>[m[Kâ€™)
[5.523s]   103 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[5.523s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.523s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[5.523s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.524s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.524s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.524s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.524s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.524s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.524s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.524s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.524s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[5.524s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>}][m[Kâ€™
[5.524s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[5.524s]       |         [01;36m[K^~~~~~~~[m[K
[5.524s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.524s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>}][m[Kâ€™:
[5.524s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>][m[Kâ€™
[5.524s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = loki_msgs::srv::SimDrive][m[Kâ€™
[5.524s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = loki_msgs::srv::SimDrive; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.524s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = loki_msgs::srv::SimDrive; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.524s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:67:62:[m[K   required from here
[5.525s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[5.525s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[5.525s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[5.525s] /opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = loki_msgs::srv::SimDrive][m[Kâ€™:
[5.525s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = loki_msgs::srv::SimDrive; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.525s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = loki_msgs::srv::SimDrive; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.525s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:67:62:[m[K   required from here
[5.525s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>}][m[Kâ€™
[5.525s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[5.525s]       |                [01;36m[K^~~~~~~~[m[K
[5.525s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[5.525s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[5.525s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[5.525s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>}][m[Kâ€™
[5.525s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[5.525s]       |                [01;36m[K^~~~~~~~[m[K
[5.526s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::SimDrive_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<loki_msgs::srv::SimDrive> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<loki_msgs::srv::SimDrive_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[5.526s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[5.526s]       |                          [01;36m[K^~~~~~~~~[m[K
[6.061s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.062s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.062s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[6.062s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.062s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = loki_msgs::msg::BaseState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.063s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = loki_msgs::msg::BaseState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.063s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.063s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.063s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:82:67:[m[K   required from here
[6.063s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::function<void(const loki_msgs::msg::BaseState_<std::allocator<void> >&)>::function(std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>&)[m[Kâ€™
[6.063s]   394 |       callback_variant_ = [01;31m[Kstatic_cast<typename scbth::callback_type>(callback)[m[K;
[6.063s]       |                           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[6.063s] In file included from [01m[K/usr/include/c++/11/future:47[m[K,
[6.063s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
[6.063s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.063s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[6.063s] [01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {const loki_msgs::msg::BaseState_<std::allocator<void> >&}][m[Kâ€™
[6.063s]   435 |         [01;36m[Kfunction[m[K(_Functor&& __f)
[6.063s]       |         [01;36m[K^~~~~~~~[m[K
[6.063s] [01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[6.063s] In file included from [01m[K/usr/include/c++/11/bits/move.h:57[m[K,
[6.063s]                  from [01m[K/usr/include/c++/11/bits/stl_pair.h:59[m[K,
[6.063s]                  from [01m[K/usr/include/c++/11/bits/stl_algobase.h:64[m[K,
[6.064s]                  from [01m[K/usr/include/c++/11/memory:63[m[K,
[6.064s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:153[m[K,
[6.064s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[6.064s] /usr/include/c++/11/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void][m[Kâ€™:
[6.064s] [01m[K/usr/include/c++/11/bits/std_function.h:353:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(const loki_msgs::msg::BaseState_<std::allocator<void> >&)>::_Callable<std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>&, std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>, std::__invoke_result<std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>&, const loki_msgs::msg::BaseState_<std::allocator<void> >&> >; _Tp = void; _Res = void; _ArgTypes = {const loki_msgs::msg::BaseState_<std::allocator<void> >&}][m[Kâ€™
[6.064s] [01m[K/usr/include/c++/11/bits/std_function.h:434:9:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[6.064s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = loki_msgs::msg::BaseState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.064s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = loki_msgs::msg::BaseState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.064s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.064s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.064s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:82:67:[m[K   required from here
[6.064s] [01m[K/usr/include/c++/11/type_traits:2205:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[6.064s]  2205 |     using [01;31m[K__enable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
[6.064s]       |           [01;31m[K^~~~~~~~~~~~~[m[K
[6.064s] In file included from [01m[K/usr/include/c++/11/future:47[m[K,
[6.064s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:18[m[K,
[6.064s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.065s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[6.065s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.065s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = loki_msgs::msg::BaseState_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.065s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = loki_msgs::msg::BaseState_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.065s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.065s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::BaseState_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::BaseState_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::BaseState_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.065s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:82:67:[m[K   required from here
[6.065s] [01m[K/usr/include/c++/11/bits/std_function.h:404:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {const loki_msgs::msg::BaseState_<std::allocator<void> >&}][m[Kâ€™
[6.065s]   404 |       [01;36m[Kfunction[m[K(function&& __x) noexcept
[6.065s]       |       [01;36m[K^~~~~~~~[m[K
[6.065s] [01m[K/usr/include/c++/11/bits/std_function.h:404:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>[m[Kâ€™ to â€˜[01m[Kstd::function<void(const loki_msgs::msg::BaseState_<std::allocator<void> >&)>&&[m[Kâ€™
[6.065s]   404 |       function([01;36m[Kfunction&& __x[m[K) noexcept
[6.065s]       |                [01;36m[K~~~~~~~~~~~^~~[m[K
[6.065s] [01m[K/usr/include/c++/11/bits/std_function.h:386:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {const loki_msgs::msg::BaseState_<std::allocator<void> >&}][m[Kâ€™
[6.065s]   386 |       [01;36m[Kfunction[m[K(const function& __x)
[6.065s]       |       [01;36m[K^~~~~~~~[m[K
[6.065s] [01m[K/usr/include/c++/11/bits/std_function.h:386:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>[m[Kâ€™ to â€˜[01m[Kconst std::function<void(const loki_msgs::msg::BaseState_<std::allocator<void> >&)>&[m[Kâ€™
[6.065s]   386 |       function([01;36m[Kconst function& __x[m[K)
[6.065s]       |                [01;36m[K~~~~~~~~~~~~~~~~^~~[m[K
[6.066s] [01m[K/usr/include/c++/11/bits/std_function.h:375:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {const loki_msgs::msg::BaseState_<std::allocator<void> >&}; std::nullptr_t = std::nullptr_t][m[Kâ€™
[6.066s]   375 |       [01;36m[Kfunction[m[K(nullptr_t) noexcept
[6.066s]       |       [01;36m[K^~~~~~~~[m[K
[6.066s] [01m[K/usr/include/c++/11/bits/std_function.h:375:16:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (PyToCpp::*(PyToCpp*, int))(const loki_msgs::msg::BaseState_<std::allocator<void> >&) const>[m[Kâ€™ to â€˜[01m[Kstd::nullptr_t[m[Kâ€™
[6.066s]   375 |       function([01;36m[Knullptr_t[m[K) noexcept
[6.066s]       |                [01;36m[K^~~~~~~~~[m[K
[6.066s] [01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {const loki_msgs::msg::BaseState_<std::allocator<void> >&}][m[Kâ€™
[6.066s]   368 |       [01;36m[Kfunction[m[K() noexcept
[6.066s]       |       [01;36m[K^~~~~~~~[m[K
[6.066s] [01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
[10.062s] gmake[2]: *** [CMakeFiles/pytocpp.dir/build.make:76: CMakeFiles/pytocpp.dir/src/py_to_cpp.cpp.o] Error 1
[10.063s] gmake[1]: *** [CMakeFiles/Makefile2:139: CMakeFiles/pytocpp.dir/all] Error 2
[10.063s] gmake: *** [Makefile:146: all] Error 2
[10.065s] Invoked command in '/home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices' returned '2': AMENT_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:/opt/ros/humble LD_LIBRARY_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices -- -j12 -l12

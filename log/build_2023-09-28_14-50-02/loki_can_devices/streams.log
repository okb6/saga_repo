[0.061s] Invoking command in '/home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices': AMENT_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:/opt/ros/humble LD_LIBRARY_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices -- -j12 -l12
[0.110s] [35m[1mConsolidate compiler generated dependencies of target can[0m
[0.157s] [ 81%] Built target can
[0.172s] [35m[1mConsolidate compiler generated dependencies of target pytocpp[0m
[0.206s] [ 90%] [32mBuilding CXX object CMakeFiles/pytocpp.dir/src/py_to_cpp.cpp.o[0m
[4.507s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:593:39:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KCANFrameConstPtr[m[Kâ€™ does not name a type
[4.507s]   593 |         void canDeviceTCallback(const [01;31m[KCANFrameConstPtr[m[K can_msg){
[4.507s]       |                                       [01;31m[K^~~~~~~~~~~~~~~~[m[K
[4.507s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:603:54:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstd_srvs::SetBool[m[Kâ€™ has not been declared
[4.507s]   603 |         bool srvCallbackMuteDeviceCommands(std_srvs::[01;31m[KSetBool[m[K::Request &req, std_srvs::SetBool::Response &res){
[4.507s]       |                                                      [01;31m[K^~~~~~~[m[K
[4.507s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:603:71:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K,[m[Kâ€™ or â€˜[01m[K...[m[Kâ€™ before â€˜[01m[K&[m[Kâ€™ token
[4.507s]   603 |         bool srvCallbackMuteDeviceCommands(std_srvs::SetBool::Request [01;31m[K&[m[Kreq, std_srvs::SetBool::Response &res){
[4.507s]       |                                                                       [01;31m[K^[m[K
[4.540s] In file included from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
[4.540s]                  from [01m[K/usr/include/c++/11/algorithm:74[m[K,
[4.540s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:18[m[K,
[4.540s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[4.540s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[4.540s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[4.540s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[4.540s] /usr/include/c++/11/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<bool (PyToCpp::*)(int), PyToCpp*, const std::_Placeholder<1>&, const std::_Placeholder<2>&>[m[Kâ€™:
[4.540s] [01m[K/usr/include/c++/11/functional:768:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, bool (PyToCpp::*)(int), PyToCpp*, const std::_Placeholder<1>&, const std::_Placeholder<2>&>[m[Kâ€™
[4.540s] [01m[K/usr/include/c++/11/functional:789:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = bool (PyToCpp::*)(int); _BoundArgs = {PyToCpp*, const std::_Placeholder<1>&, const std::_Placeholder<2>&}][m[Kâ€™
[4.540s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:76:104:[m[K   required from here
[4.540s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
[4.540s]   755 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
[4.540s]       |                               [01;31m[K~~~~~[m[K
[4.540s]   756 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
[4.541s]       |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[4.541s]   757 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
[4.541s]       |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[4.541s] [01m[K/usr/include/c++/11/functional:756:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (3 >= (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)) : (3 == (((long unsigned int)std::integral_constant<long unsigned int, 1>::value) + 1)))[m[Kâ€™ evaluates to false
[4.620s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:[m[K In member function â€˜[01m[Kbool PyToCpp::server_device_cmds(std::shared_ptr<loki_msgs::srv::DeviceCmds_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::DeviceCmds_Response_<std::allocator<void> > >)[m[Kâ€™:
[4.620s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:485:63:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kstd::vector<CanFrame>::iterator[m[Kâ€™ to â€˜[01m[KCanFrame[m[Kâ€™
[4.620s]   485 |                             can_ctrl_pltf_->sendDeviceCommand([01;31m[Kcan_frame[m[K);
[4.620s]       |                                                               [01;31m[K^~~~~~~~~[m[K
[4.620s]       |                                                               [01;31m[K|[m[K
[4.620s]       |                                                               [01;31m[Kstd::vector<CanFrame>::iterator[m[K
[4.620s] In file included from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:38[m[K:
[4.621s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_ctrl_pltf.h:104:34:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kint CanCtrlPltf::sendDeviceCommand(CanFrame)[m[Kâ€™
[4.621s]   104 |   int sendDeviceCommand([01;36m[KCanFrame can_frame[m[K);
[4.621s]       |                         [01;36m[K~~~~~~~~~^~~~~~~~~[m[K
[4.656s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:[m[K In member function â€˜[01m[Kvoid PyToCpp::canDeviceTCallback(int)[m[Kâ€™:
[4.656s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:596:29:[m[K [01;31m[Kerror: [m[Kinvalid type argument of unary â€˜[01m[K*[m[Kâ€™ (have â€˜[01m[Kint[m[Kâ€™)
[4.656s]   596 |             canFrameFromMsg([01;31m[K*can_msg[m[K, can_frame);
[4.656s]       |                             [01;31m[K^~~~~~~~[m[K
[4.662s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:[m[K In member function â€˜[01m[Kbool PyToCpp::srvCallbackMuteDeviceCommands(int)[m[Kâ€™:
[4.662s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:605:37:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kreq[m[Kâ€™ was not declared in this scope
[4.662s]   605 |             mute_device_commands_ = [01;31m[Kreq[m[K.data;
[4.662s]       |                                     [01;31m[K^~~[m[K
[4.670s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:620:13:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kres[m[Kâ€™ was not declared in this scope
[4.670s]   620 |             [01;31m[Kres[m[K.success = true;
[4.670s]       |             [01;31m[K^~~[m[K
[5.405s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36[m[K,
[5.405s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28[m[K,
[5.405s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.405s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.405s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.405s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.405s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.405s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.406s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[5.406s] /opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::SetBool][m[Kâ€™:
[5.406s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.406s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.406s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:76:60:[m[K   required from here
[5.406s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >[m[Kâ€™ and â€˜[01m[Kstd::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>[m[Kâ€™)
[5.406s]   103 |       [01;31m[Kcallback_ = std::forward<CallbackT>(callback)[m[K;
[5.406s]       |       [01;31m[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.406s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[5.406s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[5.407s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[5.407s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[5.407s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[5.407s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}][m[Kâ€™
[5.407s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[5.407s]       |         [01;36m[K^~~~~~~~[m[K
[5.407s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[5.407s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}][m[Kâ€™:
[5.407s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>][m[Kâ€™
[5.407s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:[m[K   required from â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::SetBool][m[Kâ€™
[5.407s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.407s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.407s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:76:60:[m[K   required from here
[5.407s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[5.407s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[5.407s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[5.407s] /opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::SetBool][m[Kâ€™:
[5.408s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.408s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:[m[K   required from â€˜[01m[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>][m[Kâ€™
[5.408s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:76:60:[m[K   required from here
[5.408s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}][m[Kâ€™
[5.408s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[5.408s]       |                [01;36m[K^~~~~~~~[m[K
[5.408s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>[m[Kâ€™ to â€˜[01m[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >&[m[Kâ€™
[5.408s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[5.408s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[5.408s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}][m[Kâ€™
[5.408s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[5.408s]       |                [01;36m[K^~~~~~~~[m[K
[5.408s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(int)>[m[Kâ€™ to â€˜[01m[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >&&[m[Kâ€™
[5.408s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[5.408s]       |                          [01;36m[K^~~~~~~~~[m[K
[6.472s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[6.472s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[6.472s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.472s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.472s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.472s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.473s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.473s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.473s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.473s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.473s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[6.473s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.473s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = loki_msgs::msg::CANFrame_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.473s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = loki_msgs::msg::CANFrame_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.473s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.473s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.473s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:87:66:[m[K   required from here
[6.473s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™})
[6.473s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[6.473s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[6.474s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[6.474s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[6.474s]                  from [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1[m[K:
[6.474s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.474s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[6.474s]       |         [01;36m[K^~~~~~~~[m[K
[6.474s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[6.474s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(int)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[6.475s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(int)>][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = loki_msgs::msg::CANFrame_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = loki_msgs::msg::CANFrame_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:87:66:[m[K   required from here
[6.475s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[6.475s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[6.475s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[6.475s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = loki_msgs::msg::CANFrame_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = loki_msgs::msg::CANFrame_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = loki_msgs::msg::CANFrame_<std::allocator<void> >; CallbackT = std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<loki_msgs::msg::CANFrame_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[6.475s] [01m[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:87:66:[m[K   required from here
[6.475s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.475s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[6.476s]       |                [01;36m[K^~~~~~~~[m[K
[6.476s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[6.476s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[6.476s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[6.476s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[6.476s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[6.476s]       |                [01;36m[K^~~~~~~~[m[K
[6.476s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::_Bind<void (PyToCpp::*(PyToCpp*, std::_Placeholder<1>))(int)>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&)>, std::function<void(const loki_msgs::msg::CANFrame_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> >, std::default_delete<loki_msgs::msg::CANFrame_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const loki_msgs::msg::CANFrame_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<loki_msgs::msg::CANFrame_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[6.476s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[6.476s]       |                          [01;36m[K^~~~~~~~~[m[K
[11.733s] gmake[2]: *** [CMakeFiles/pytocpp.dir/build.make:76: CMakeFiles/pytocpp.dir/src/py_to_cpp.cpp.o] Error 1
[11.733s] gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/pytocpp.dir/all] Error 2
[11.734s] gmake: *** [Makefile:146: all] Error 2
[11.736s] Invoked command in '/home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices' returned '2': AMENT_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:${AMENT_PREFIX_PATH} CMAKE_PREFIX_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:/opt/ros/humble LD_LIBRARY_PATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/lib:${LD_LIBRARY_PATH} PYTHONPATH=/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/local/lib/python3.10/dist-packages:${PYTHONPATH} /usr/bin/cmake --build /home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices -- -j12 -l12

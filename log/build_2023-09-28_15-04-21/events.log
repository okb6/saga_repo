[0.000000] (-) TimerEvent: {}
[0.000096] (-) JobUnselected: {'identifier': 'actionlib_msgs'}
[0.000129] (-) JobUnselected: {'identifier': 'common_interfaces'}
[0.000162] (-) JobUnselected: {'identifier': 'diagnostic_aggregator'}
[0.000180] (-) JobUnselected: {'identifier': 'diagnostic_common_diagnostics'}
[0.000196] (-) JobUnselected: {'identifier': 'diagnostic_msgs'}
[0.000278] (-) JobUnselected: {'identifier': 'diagnostic_updater'}
[0.000296] (-) JobUnselected: {'identifier': 'diagnostics'}
[0.000329] (-) JobUnselected: {'identifier': 'geometry_msgs'}
[0.000345] (-) JobUnselected: {'identifier': 'loki_base'}
[0.000360] (-) JobUnselected: {'identifier': 'loki_bringup'}
[0.000425] (-) JobUnselected: {'identifier': 'loki_description'}
[0.000442] (-) JobUnselected: {'identifier': 'loki_msgs'}
[0.000472] (-) JobUnselected: {'identifier': 'loki_simulator'}
[0.000488] (-) JobUnselected: {'identifier': 'loki_teleop'}
[0.000567] (-) JobUnselected: {'identifier': 'loki_twist_mux'}
[0.000584] (-) JobUnselected: {'identifier': 'nav_msgs'}
[0.000602] (-) JobUnselected: {'identifier': 'rasberry_gazebo'}
[0.000631] (-) JobUnselected: {'identifier': 'robot_bringup'}
[0.000646] (-) JobUnselected: {'identifier': 'self_test'}
[0.000734] (-) JobUnselected: {'identifier': 'sensor_msgs'}
[0.000752] (-) JobUnselected: {'identifier': 'sensor_msgs_py'}
[0.000769] (-) JobUnselected: {'identifier': 'shape_msgs'}
[0.000796] (-) JobUnselected: {'identifier': 'std_msgs'}
[0.000812] (-) JobUnselected: {'identifier': 'std_srvs'}
[0.000898] (-) JobUnselected: {'identifier': 'stereo_msgs'}
[0.000926] (-) JobUnselected: {'identifier': 'trajectory_msgs'}
[0.000954] (-) JobUnselected: {'identifier': 'twist_mux'}
[0.000991] (-) JobUnselected: {'identifier': 'visualization_msgs'}
[0.001020] (loki_can_devices) JobQueued: {'identifier': 'loki_can_devices', 'dependencies': OrderedDict([('loki_description', '/home/cairlab/Documents/GitHub/saga_repo/install/loki_description'), ('std_msgs', '/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs'), ('std_srvs', '/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs'), ('geometry_msgs', '/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs'), ('diagnostic_msgs', '/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs'), ('nav_msgs', '/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs'), ('sensor_msgs', '/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs'), ('loki_msgs', '/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs')])}
[0.001061] (loki_can_devices) JobStarted: {'identifier': 'loki_can_devices'}
[0.061194] (loki_can_devices) JobProgress: {'identifier': 'loki_can_devices', 'progress': 'cmake'}
[0.062346] (loki_can_devices) JobProgress: {'identifier': 'loki_can_devices', 'progress': 'build'}
[0.062388] (loki_can_devices) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices', '--', '-j12', '-l12'], 'cwd': '/home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices', 'env': OrderedDict([('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'cairlab'), ('XDG_SESSION_TYPE', 'wayland'), ('SHLVL', '1'), ('LD_LIBRARY_PATH', '/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/lib:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/lib:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('HOME', '/home/cairlab'), ('OLDPWD', '/home/cairlab'), ('DESKTOP_SESSION', 'ubuntu'), ('ROS_PYTHON_VERSION', '3'), ('GNOME_SHELL_SESSION_MODE', 'ubuntu'), ('GTK_MODULES', 'gail:atk-bridge'), ('SYSTEMD_EXEC_PID', '2238'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('_colcon_cd_root', '/opt/ros/humble/'), ('IM_CONFIG_PHASE', '1'), ('WAYLAND_DISPLAY', 'wayland-0'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'cairlab'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('USERNAME', 'cairlab'), ('TERM', 'xterm-256color'), ('GNOME_DESKTOP_SESSION_ID', 'this-is-deprecated'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/opt/ros/humble/bin:/home/cairlab/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin'), ('SESSION_MANAGER', 'local/cairlab-System-Product-Name:@/tmp/.ICE-unix/2220,unix/cairlab-System-Product-Name:/tmp/.ICE-unix/2220'), ('XDG_MENU_PREFIX', 'gnome-'), ('GNOME_TERMINAL_SCREEN', '/org/gnome/Terminal/screen/0a1688aa_ac16_47ef_8b76_ec91474c2528'), ('GNOME_SETUP_DISPLAY', ':1'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('DISPLAY', ':0'), ('LANG', 'en_US.UTF-8'), ('XDG_CURRENT_DESKTOP', 'ubuntu:GNOME'), ('XMODIFIERS', '@im=ibus'), ('XDG_SESSION_DESKTOP', 'ubuntu'), ('XAUTHORITY', '/run/user/1000/.mutter-Xwaylandauth.HCXBB2'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('GNOME_TERMINAL_SERVICE', ':1.4105'), ('SSH_AGENT_LAUNCHER', 'gnome-keyring'), ('SSH_AUTH_SOCK', '/run/user/1000/keyring/ssh'), ('AMENT_PREFIX_PATH', '/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('QT_ACCESSIBILITY', '1'), ('GDMSESSION', 'ubuntu'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('QT_IM_MODULE', 'ibus'), ('PWD', '/home/cairlab/Documents/GitHub/saga_repo/build/loki_can_devices'), ('LC_ALL', 'en_US.UTF-8'), ('XDG_CONFIG_DIRS', '/etc/xdg/xdg-ubuntu:/etc/xdg'), ('XDG_DATA_DIRS', '/usr/share/ubuntu:/usr/local/share/:/usr/share/:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs/local/lib/python3.10/dist-packages:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('COLCON', '1'), ('VTE_VERSION', '6800'), ('CMAKE_PREFIX_PATH', '/home/cairlab/Documents/GitHub/saga_repo/install/loki_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/sensor_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/nav_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/diagnostic_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/geometry_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/std_srvs:/home/cairlab/Documents/GitHub/saga_repo/install/std_msgs:/home/cairlab/Documents/GitHub/saga_repo/install/loki_description:/opt/ros/humble')]), 'shell': False}
[0.099434] (-) TimerEvent: {}
[0.133606] (loki_can_devices) StdoutLine: {'line': b'[ 81%] Built target can\n'}
[0.150331] (loki_can_devices) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target pytocpp\x1b[0m\n'}
[0.184074] (loki_can_devices) StdoutLine: {'line': b'[ 90%] \x1b[32mBuilding CXX object CMakeFiles/pytocpp.dir/src/py_to_cpp.cpp.o\x1b[0m\n'}
[0.199535] (-) TimerEvent: {}
[0.299763] (-) TimerEvent: {}
[0.400106] (-) TimerEvent: {}
[0.500354] (-) TimerEvent: {}
[0.600594] (-) TimerEvent: {}
[0.700853] (-) TimerEvent: {}
[0.801123] (-) TimerEvent: {}
[0.901379] (-) TimerEvent: {}
[1.001644] (-) TimerEvent: {}
[1.101888] (-) TimerEvent: {}
[1.202138] (-) TimerEvent: {}
[1.302406] (-) TimerEvent: {}
[1.402664] (-) TimerEvent: {}
[1.502921] (-) TimerEvent: {}
[1.603183] (-) TimerEvent: {}
[1.703459] (-) TimerEvent: {}
[1.803715] (-) TimerEvent: {}
[1.903989] (-) TimerEvent: {}
[2.004244] (-) TimerEvent: {}
[2.104511] (-) TimerEvent: {}
[2.204766] (-) TimerEvent: {}
[2.305043] (-) TimerEvent: {}
[2.405305] (-) TimerEvent: {}
[2.505510] (-) TimerEvent: {}
[2.605759] (-) TimerEvent: {}
[2.706015] (-) TimerEvent: {}
[2.806272] (-) TimerEvent: {}
[2.906526] (-) TimerEvent: {}
[3.006752] (-) TimerEvent: {}
[3.107012] (-) TimerEvent: {}
[3.207290] (-) TimerEvent: {}
[3.307553] (-) TimerEvent: {}
[3.407819] (-) TimerEvent: {}
[3.508068] (-) TimerEvent: {}
[3.608315] (-) TimerEvent: {}
[3.708580] (-) TimerEvent: {}
[3.808851] (-) TimerEvent: {}
[3.909097] (-) TimerEvent: {}
[4.009344] (-) TimerEvent: {}
[4.109636] (-) TimerEvent: {}
[4.209886] (-) TimerEvent: {}
[4.310132] (-) TimerEvent: {}
[4.410381] (-) TimerEvent: {}
[4.510630] (-) TimerEvent: {}
[4.601855] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kbool PyToCpp::server_device_cmds(std::shared_ptr<loki_msgs::srv::DeviceCmds_Request_<std::allocator<void> > >, std::shared_ptr<loki_msgs::srv::DeviceCmds_Response_<std::allocator<void> > >)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.602036] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:485:63:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kcannot convert \xe2\x80\x98\x1b[01m\x1b[Kstd::vector<CanFrame>::iterator\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[KCanFrame\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.602099] (loki_can_devices) StderrLine: {'line': b'  485 |                             can_ctrl_pltf_->sendDeviceCommand(\x1b[01;31m\x1b[Kcan_frame\x1b[m\x1b[K);\n'}
[4.602153] (loki_can_devices) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[4.602204] (loki_can_devices) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[K|\x1b[m\x1b[K\n'}
[4.602253] (loki_can_devices) StderrLine: {'line': b'      |                                                               \x1b[01;31m\x1b[Kstd::vector<CanFrame>::iterator\x1b[m\x1b[K\n'}
[4.602310] (loki_can_devices) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:38\x1b[m\x1b[K:\n'}
[4.602359] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_ctrl_pltf.h:104:34:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  initializing argument 1 of \xe2\x80\x98\x1b[01m\x1b[Kint CanCtrlPltf::sendDeviceCommand(CanFrame)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.602411] (loki_can_devices) StderrLine: {'line': b'  104 |   int sendDeviceCommand(\x1b[01;36m\x1b[KCanFrame can_frame\x1b[m\x1b[K);\n'}
[4.602465] (loki_can_devices) StderrLine: {'line': b'      |                         \x1b[01;36m\x1b[K~~~~~~~~~^~~~~~~~~\x1b[m\x1b[K\n'}
[4.610751] (-) TimerEvent: {}
[4.634689] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:\x1b[m\x1b[K In member function \xe2\x80\x98\x1b[01m\x1b[Kvoid PyToCpp::canDeviceTCallback(loki_msgs::msg::CANFrame)\x1b[m\x1b[K\xe2\x80\x99:\n'}
[4.635061] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:596:29:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator*\x1b[m\x1b[K\xe2\x80\x99 (operand type is \xe2\x80\x98\x1b[01m\x1b[Kconst CANFrame\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst loki_msgs::msg::CANFrame_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99})\n'}
[4.635122] (loki_can_devices) StderrLine: {'line': b'  596 |             canFrameFromMsg(\x1b[01;31m\x1b[K*can_msg\x1b[m\x1b[K, can_frame);\n'}
[4.635176] (loki_can_devices) StderrLine: {'line': b'      |                             \x1b[01;31m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.635227] (loki_can_devices) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/detail/container_fwd.hpp:98\x1b[m\x1b[K,\n'}
[4.635275] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/container_hash/extensions.hpp:22\x1b[m\x1b[K,\n'}
[4.635323] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/container_hash/hash.hpp:761\x1b[m\x1b[K,\n'}
[4.635371] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/functional/hash.hpp:6\x1b[m\x1b[K,\n'}
[4.635419] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/detail/thread.hpp:41\x1b[m\x1b[K,\n'}
[4.635467] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/thread_only.hpp:22\x1b[m\x1b[K,\n'}
[4.635514] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/thread_functors.hpp:15\x1b[m\x1b[K,\n'}
[4.635561] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/scoped_thread.hpp:15\x1b[m\x1b[K,\n'}
[4.635608] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_line_socketcan.h:25\x1b[m\x1b[K,\n'}
[4.635656] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_ctrl_pltf.h:5\x1b[m\x1b[K,\n'}
[4.635704] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:38\x1b[m\x1b[K:\n'}
[4.635752] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/complex:392:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const std::complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.635810] (loki_can_devices) StderrLine: {'line': b'  392 |     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const complex<_Tp>& __y)\n'}
[4.635858] (loki_can_devices) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.635905] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/complex:392:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.635952] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:596:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kconst CANFrame\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst loki_msgs::msg::CANFrame_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.636009] (loki_can_devices) StderrLine: {'line': b'  596 |             canFrameFromMsg(*\x1b[01;36m\x1b[Kcan_msg\x1b[m\x1b[K, can_frame);\n'}
[4.636062] (loki_can_devices) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.636110] (loki_can_devices) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/detail/container_fwd.hpp:98\x1b[m\x1b[K,\n'}
[4.636158] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/container_hash/extensions.hpp:22\x1b[m\x1b[K,\n'}
[4.636205] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/container_hash/hash.hpp:761\x1b[m\x1b[K,\n'}
[4.636252] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/functional/hash.hpp:6\x1b[m\x1b[K,\n'}
[4.636299] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/detail/thread.hpp:41\x1b[m\x1b[K,\n'}
[4.636346] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/thread_only.hpp:22\x1b[m\x1b[K,\n'}
[4.636394] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/thread_functors.hpp:15\x1b[m\x1b[K,\n'}
[4.636441] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/scoped_thread.hpp:15\x1b[m\x1b[K,\n'}
[4.636488] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_line_socketcan.h:25\x1b[m\x1b[K,\n'}
[4.636536] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_ctrl_pltf.h:5\x1b[m\x1b[K,\n'}
[4.636588] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:38\x1b[m\x1b[K:\n'}
[4.636636] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/complex:401:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const std::complex<_Tp>&, const _Tp&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.636713] (loki_can_devices) StderrLine: {'line': b'  401 |     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const complex<_Tp>& __x, const _Tp& __y)\n'}
[4.636780] (loki_can_devices) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.636829] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/complex:401:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.636879] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:596:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  \xe2\x80\x98\x1b[01m\x1b[Kconst CANFrame\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kconst loki_msgs::msg::CANFrame_<std::allocator<void> >\x1b[m\x1b[K\xe2\x80\x99} is not derived from \xe2\x80\x98\x1b[01m\x1b[Kconst std::complex<_Tp>\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.636947] (loki_can_devices) StderrLine: {'line': b'  596 |             canFrameFromMsg(*\x1b[01;36m\x1b[Kcan_msg\x1b[m\x1b[K, can_frame);\n'}
[4.637012] (loki_can_devices) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.637060] (loki_can_devices) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/usr/include/boost/detail/container_fwd.hpp:98\x1b[m\x1b[K,\n'}
[4.637108] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/container_hash/extensions.hpp:22\x1b[m\x1b[K,\n'}
[4.637156] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/container_hash/hash.hpp:761\x1b[m\x1b[K,\n'}
[4.637204] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/functional/hash.hpp:6\x1b[m\x1b[K,\n'}
[4.637251] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/detail/thread.hpp:41\x1b[m\x1b[K,\n'}
[4.637300] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/thread_only.hpp:22\x1b[m\x1b[K,\n'}
[4.637377] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/thread_functors.hpp:15\x1b[m\x1b[K,\n'}
[4.637500] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/usr/include/boost/thread/scoped_thread.hpp:15\x1b[m\x1b[K,\n'}
[4.637584] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_line_socketcan.h:25\x1b[m\x1b[K,\n'}
[4.637670] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/include/loki_can_devices/can_ctrl_pltf.h:5\x1b[m\x1b[K,\n'}
[4.637778] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:38\x1b[m\x1b[K:\n'}
[4.637844] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/complex:410:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::complex<_Tp> std::operator*(const _Tp&, const std::complex<_Tp>&)\x1b[m\x1b[K\xe2\x80\x99\n'}
[4.637894] (loki_can_devices) StderrLine: {'line': b'  410 |     \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K*(const _Tp& __x, const complex<_Tp>& __y)\n'}
[4.637942] (loki_can_devices) StderrLine: {'line': b'      |     \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[4.637989] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/complex:410:5:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[4.638037] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:596:30:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  candidate expects 2 arguments, 1 provided\n'}
[4.638085] (loki_can_devices) StderrLine: {'line': b'  596 |             canFrameFromMsg(*\x1b[01;36m\x1b[Kcan_msg\x1b[m\x1b[K, can_frame);\n'}
[4.638140] (loki_can_devices) StderrLine: {'line': b'      |                              \x1b[01;36m\x1b[K^~~~~~~\x1b[m\x1b[K\n'}
[4.710871] (-) TimerEvent: {}
[4.811136] (-) TimerEvent: {}
[4.911384] (-) TimerEvent: {}
[5.011630] (-) TimerEvent: {}
[5.111979] (-) TimerEvent: {}
[5.212240] (-) TimerEvent: {}
[5.312511] (-) TimerEvent: {}
[5.406941] (loki_can_devices) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/service.hpp:36\x1b[m\x1b[K,\n'}
[5.407384] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:28\x1b[m\x1b[K,\n'}
[5.407606] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.407752] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.407806] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.407858] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.407906] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.407954] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.408001] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.408056] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.408104] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1\x1b[m\x1b[K:\n'}
[5.408153] (loki_can_devices) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::SetBool]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.408204] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.408257] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.408315] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:76:60:\x1b[m\x1b[K   required from here\n'}
[5.408363] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >\x1b[m\x1b[K\xe2\x80\x99 and \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99)\n'}
[5.408431] (loki_can_devices) StderrLine: {'line': b'  103 |       \x1b[01;31m\x1b[Kcallback_ = std::forward<CallbackT>(callback)\x1b[m\x1b[K;\n'}
[5.408479] (loki_can_devices) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.408526] (loki_can_devices) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[5.408578] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[5.408626] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[5.408672] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[5.408718] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[5.408764] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[5.408810] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[5.408858] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[5.408904] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[5.408951] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[5.408997] (loki_can_devices) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:1\x1b[m\x1b[K:\n'}
[5.409044] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409109] (loki_can_devices) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[5.409156] (loki_can_devices) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.409203] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[5.409250] (loki_can_devices) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.409314] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >&> std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409419] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp:103:17:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::SetBool]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409508] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409566] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409618] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:76:60:\x1b[m\x1b[K   required from here\n'}
[5.409666] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409715] (loki_can_devices) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[5.409762] (loki_can_devices) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.409809] (loki_can_devices) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_service_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Kvoid rclcpp::AnyServiceCallback<ServiceT>::set(CallbackT&&) [with CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename std::enable_if<(! rclcpp::detail::can_be_nullptr<CallbackT>::value), int>::type <anonymous> = 0; ServiceT = std_srvs::srv::SetBool]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[5.409860] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_service.hpp:43:27:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::create_service(std::shared_ptr<rclcpp::node_interfaces::NodeBaseInterface>, std::shared_ptr<rclcpp::node_interfaces::NodeServicesInterface>, const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409928] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:147:53:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Ktypename rclcpp::Service<ServiceT>::SharedPtr rclcpp::Node::create_service(const string&, CallbackT&&, const rmw_qos_profile_t&, rclcpp::CallbackGroup::SharedPtr) [with ServiceT = std_srvs::srv::SetBool; CallbackT = std::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>; typename rclcpp::Service<ServiceT>::SharedPtr = std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >; std::string = std::__cxx11::basic_string<char>; rmw_qos_profile_t = rmw_qos_profile_s; rclcpp::CallbackGroup::SharedPtr = std::shared_ptr<rclcpp::CallbackGroup>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.409981] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/home/cairlab/Documents/GitHub/saga_repo/ros2_thor/src/loki/loki_can_devices/src/py_to_cpp.cpp:76:60:\x1b[m\x1b[K   required from here\n'}
[5.410029] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.410081] (loki_can_devices) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[5.410128] (loki_can_devices) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.410175] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.410228] (loki_can_devices) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[5.410275] (loki_can_devices) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[5.410321] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.410394] (loki_can_devices) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[5.410442] (loki_can_devices) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[5.410488] (loki_can_devices) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Kstd::_Bind<bool (PyToCpp::*(PyToCpp*, std::_Placeholder<1>, std::_Placeholder<2>))(const std_srvs::srv::SetBool_Request_<std::allocator<void> >&, std_srvs::srv::SetBool_Response_<std::allocator<void> >&)>\x1b[m\x1b[K\xe2\x80\x99 to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::monostate, std::function<void(std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >, std::shared_ptr<std_srvs::srv::SetBool_Response_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<rclcpp::Service<std_srvs::srv::SetBool> >, std::shared_ptr<rmw_request_id_s>, std::shared_ptr<std_srvs::srv::SetBool_Request_<std::allocator<void> > >)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[5.410542] (loki_can_devices) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[5.410588] (loki_can_devices) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[5.412565] (-) TimerEvent: {}
[5.512754] (-) TimerEvent: {}
[5.613012] (-) TimerEvent: {}
[5.713270] (-) TimerEvent: {}
[5.813497] (-) TimerEvent: {}
[5.913816] (-) TimerEvent: {}
[6.014105] (-) TimerEvent: {}
[6.114392] (-) TimerEvent: {}
[6.214660] (-) TimerEvent: {}
[6.314948] (-) TimerEvent: {}
[6.415240] (-) TimerEvent: {}
[6.515525] (-) TimerEvent: {}
[6.615863] (-) TimerEvent: {}
[6.716143] (-) TimerEvent: {}
[6.816416] (-) TimerEvent: {}
[6.916690] (-) TimerEvent: {}
[7.016966] (-) TimerEvent: {}
[7.117246] (-) TimerEvent: {}
[7.217513] (-) TimerEvent: {}
[7.317793] (-) TimerEvent: {}
[7.418058] (-) TimerEvent: {}
[7.518322] (-) TimerEvent: {}
[7.618600] (-) TimerEvent: {}
[7.718879] (-) TimerEvent: {}
[7.819156] (-) TimerEvent: {}
[7.919436] (-) TimerEvent: {}
[8.019696] (-) TimerEvent: {}
[8.119975] (-) TimerEvent: {}
[8.220235] (-) TimerEvent: {}
[8.320508] (-) TimerEvent: {}
[8.420769] (-) TimerEvent: {}
[8.521047] (-) TimerEvent: {}
[8.621332] (-) TimerEvent: {}
[8.721661] (-) TimerEvent: {}
[8.821937] (-) TimerEvent: {}
[8.922178] (-) TimerEvent: {}
[9.022481] (-) TimerEvent: {}
[9.122752] (-) TimerEvent: {}
[9.223019] (-) TimerEvent: {}
[9.323286] (-) TimerEvent: {}
[9.423558] (-) TimerEvent: {}
[9.523856] (-) TimerEvent: {}
[9.624141] (-) TimerEvent: {}
[9.724455] (-) TimerEvent: {}
[9.824722] (-) TimerEvent: {}
[9.924991] (-) TimerEvent: {}
[10.025275] (-) TimerEvent: {}
[10.125565] (-) TimerEvent: {}
[10.225829] (-) TimerEvent: {}
[10.326119] (-) TimerEvent: {}
[10.426397] (-) TimerEvent: {}
[10.526658] (-) TimerEvent: {}
[10.626925] (-) TimerEvent: {}
[10.727221] (-) TimerEvent: {}
[10.827547] (-) TimerEvent: {}
[10.927871] (-) TimerEvent: {}
[11.028135] (-) TimerEvent: {}
[11.128419] (-) TimerEvent: {}
[11.228689] (-) TimerEvent: {}
[11.328980] (-) TimerEvent: {}
[11.429256] (-) TimerEvent: {}
[11.529533] (-) TimerEvent: {}
[11.629858] (-) TimerEvent: {}
[11.730134] (-) TimerEvent: {}
[11.830402] (-) TimerEvent: {}
[11.930667] (-) TimerEvent: {}
[12.011899] (loki_can_devices) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/pytocpp.dir/build.make:76: CMakeFiles/pytocpp.dir/src/py_to_cpp.cpp.o] Error 1\n'}
[12.012199] (loki_can_devices) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/pytocpp.dir/all] Error 2\n'}
[12.012488] (loki_can_devices) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[12.015008] (loki_can_devices) CommandEnded: {'returncode': 2}
[12.030743] (-) TimerEvent: {}
[12.128971] (loki_can_devices) JobEnded: {'identifier': 'loki_can_devices', 'rc': 2}
[12.143188] (-) TimerEvent: {}
[12.143331] (-) EventReactorShutdown: {}

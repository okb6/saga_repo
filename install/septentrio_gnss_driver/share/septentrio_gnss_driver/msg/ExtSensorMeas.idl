// generated from rosidl_adapter/resource/msg.idl.em
// with input from septentrio_gnss_driver/msg/ExtSensorMeas.msg
// generated code does not contain a copyright notice

#include "septentrio_gnss_driver/msg/BlockHeader.idl"
#include "std_msgs/msg/Header.idl"

module septentrio_gnss_driver {
  module msg {
    @verbatim (language="comment", text=
      "ExtSensorMeas block " "\n"
      "Block_Number 4050")
    struct ExtSensorMeas {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "SBF block header including time header")
      septentrio_gnss_driver::msg::BlockHeader block_header;

      uint8 n;

      uint8 sb_length;

      @verbatim (language="comment", text=
        "ExtSensorMeasSet")
      sequence<uint8> source;

      sequence<uint8> sensor_model;

      sequence<uint8> type;

      sequence<uint8> obs_info;

      @verbatim (language="comment", text=
        "ExtSensorMeasAcceleration" "\n"
        " m/s^2")
      double acceleration_x;

      @verbatim (language="comment", text=
        "m/s^2")
      double acceleration_y;

      @verbatim (language="comment", text=
        "m/s^2")
      double acceleration_z;

      @verbatim (language="comment", text=
        "ExtSensorMeasAngularRate" "\n"
        " deg/s")
      double angular_rate_x;

      @verbatim (language="comment", text=
        "deg/s")
      double angular_rate_y;

      @verbatim (language="comment", text=
        "deg/s")
      double angular_rate_z;

      @verbatim (language="comment", text=
        "ExtSensorMeasVelocity" "\n"
        " m/s")
      float velocity_x;

      @verbatim (language="comment", text=
        "m/s")
      float velocity_y;

      @verbatim (language="comment", text=
        "m/s")
      float velocity_z;

      @verbatim (language="comment", text=
        "m/s")
      float std_dev_x;

      @verbatim (language="comment", text=
        "m/s")
      float std_dev_y;

      @verbatim (language="comment", text=
        "m/s")
      float std_dev_z;

      @verbatim (language="comment", text=
        "ExtSensorMeasInfo" "\n"
        " deg C")
      float sensor_temperature;

      @verbatim (language="comment", text=
        "ExtSensorMeasZeroVelocityFlag")
      double zero_velocity_flag;
    };
  };
};

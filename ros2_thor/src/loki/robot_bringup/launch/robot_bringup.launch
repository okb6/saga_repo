<?xml version="1.0" ?>
<launch>
  <arg name="robot_model" />
  <arg name="model_extras" default=""/>
  <arg name="simple_sim" />
  <arg name="datum_file" default=""/>

  <arg name="ekf_publish_tf" default="false" />
  <arg name="robot_name" default="" />
  <arg name="tf_prefix" default="" />
  <arg name="with_teleoperation" default="false" />
  <arg name="teleop_controller_type" default="xbox" />
  <arg name="teleop_controller" default="$(find-pkg-share loki_teleop)/config/$(var teleop_controller_type).yaml" />
  <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="joy_autorepeat_rate" default="20.0" />
  <arg name="joy_deadzone" default="0.2" />

  <arg name="can_interface_type" default="socketcan" />
  <arg name="can_interface_name" default="can0" />

  <!-- Robot starting pose arguments for simulation  -->
  <arg name="start_pose_x" default="0" if="$(var simple_sim)"/>
  <arg name="start_pose_y" default="0" if="$(var simple_sim)"/>
  <arg name="start_pose_z" default="0" if="$(var simple_sim)"/>
  <arg name="start_pose_R" default="0" if="$(var simple_sim)"/>
  <arg name="start_pose_P" default="0" if="$(var simple_sim)"/>
  <arg name="start_pose_Y" default="0" if="$(var simple_sim)"/>

  <arg name="world_name" default="riseholme"/>
  <arg name="world" default="$(find-pkg-share rasberry_gazebo)/worlds/$(var world_name).world" if="$(var simple_sim)"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
  <arg name="with_actors" default="false" />
  <arg name="with_gui" default="true" if="$(var simple_sim)" />
  <arg name="include_plants" default="false"/>
  <arg name="include_calibration_pod" default="false"/>

  <!-- model bringup -->
  <include file="$(find-pkg-share loki_description)/launch/model.launch.py"/>
    <!-- <remap from="robot_name" to="$(var robot_name)" />
    <remap from="tf_prefix" to="$(var tf_prefix)" />
    <remap from="robot_model" to="$(var robot_model)" />
    <remap from="model_extras" to="$(var model_extras)" />
    <remap from="datum_file" to="$(var datum_file)" />
  </include> -->

  <!-- base bringup-->
  <include file="$(find-pkg-share loki_base)/launch/base_bringup.launch.py"/>
    <!-- <remap from="robot_model" to="$(var robot_model)" />
    <remap from="simple_sim" to="$(var simple_sim)" />
    <remap from="enable_odom_tf" to="false" if="$(var simple_sim)"/> -->
    <!-- Only publish odom tf if not done by the sim or by an ekf -->
    <!-- <remap from="enable_odom_tf" to="$(eval not arg('ekf_publish_tf'))" unless="$(var simple_sim)"/>
    <remap from="can_interface_type" to="$(var can_interface_type)" />
    <remap from="can_interface_name" to="$(var can_interface_name)" /> -->
  <!-- </include> -->

  <include file="$(find-pkg-share loki_can_devices)/launch/pytocpp.launch.py"/>

  <!-- teleop bringup -->
  <include file="$(find-pkg-share loki_teleop)/launch/teleop.launch" if="$(var with_teleoperation)"/>
    <!-- <remap from="joy_dev" to="$(var joy_dev)" />
    <remap from="joy_autorepeat_rate" to="$(var joy_autorepeat_rate)" />
    <remap from="joy_deadzone" to="$(var joy_deadzone)" /> -->
    <!-- If is added temporarily to keep backwards compatible, otherwise will complain about unused arg -->
    <!-- <remap from="teleop_controller_type" to="$(var teleop_controller_type)" if="$(eval arg('teleop_controller_type') == 'tiger_g2')"/>
    <remap from="teleop_controller" to="$(var teleop_controller)" />
  </include> -->

  <!-- twist mux bringup -->
  <include file="$(find-pkg-share loki_twist_mux)/launch/twist_mux.launch"/>

  <!-- Launch the Gazebo world.  -->
  <include file="$(find-pkg-share rasberry_gazebo)/launch/world.launch" if="$(var simple_sim)"  />
   <!-- <remap from="world" to="$(var world)"/> Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable
   <remap from="gui" to="$(var with_gui)"/>
  </include> -->

  <!-- spawn robot in gazebo -->
  <node pkg="gazebo_ros" exec="spawn_model" name="spawner" args="-urdf -param /robot_description -model loki_ii -x $(var start_pose_x) -y $(var start_pose_y) -z $(var start_pose_z) -R $(var start_pose_R)  -P $(var start_pose_P)  -Y $(var start_pose_Y)" if="$(var simple_sim)"/>


</launch>
